using Microsoft.Graph;
using Microsoft.Toolkit.Services.MicrosoftGraph;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;

namespace QuickNotes
{
    class QuickNote
    {

        public static async Task SaveToOneNoteAsync(string NoteText)
        {
            GraphServiceClient graphClient = MicrosoftGraphService.Instance.GraphProvider;
            
            try
            {
                IOnenoteSectionsCollectionPage oneNoteSections = await graphClient.Me.Onenote.Sections.Request()
                    .Filter("displayName eq 'Quick Notes'")
                    .GetAsync();

                string oneNoteSectionId = oneNoteSections[0].Id;

                string oneNoteAddPageRequestUrl = graphClient.Me.Onenote.Sections[oneNoteSectionId].Pages.Request().RequestUrl;

                string oneNotePageBodyHtml = String.Concat(
                    @"<!DOCTYPE html><html><head><title>",
                    NoteText,
                    @"</title></head><body>Generated by QuickNotes</body></html> "
                    );

                HttpRequestMessage httpRequestMessage = new HttpRequestMessage(HttpMethod.Post, oneNoteAddPageRequestUrl);
                httpRequestMessage.Content = new StringContent(oneNotePageBodyHtml, System.Text.Encoding.UTF8, "text/html");
                await graphClient.AuthenticationProvider.AuthenticateRequestAsync(httpRequestMessage);
                HttpResponseMessage response = await graphClient.HttpProvider.SendAsync(httpRequestMessage);

                if (!response.IsSuccessStatusCode)
                    throw new ServiceException(
                        new Error
                        {
                            Code = response.StatusCode.ToString(),
                            Message = await response.Content.ReadAsStringAsync()
                        });
            }
            catch (Exception e)
            {
                throw (e);
            }
        }
    }
}
